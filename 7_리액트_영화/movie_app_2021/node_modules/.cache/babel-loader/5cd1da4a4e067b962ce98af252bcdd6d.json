{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\hanbal_2021\\\\7_\\uB9AC\\uC561\\uD2B8_\\uC601\\uD654\\\\movie_app_2021\\\\src\\\\App.js\";\nimport Potato from \"./Potato\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n      console.log(movies);\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    console.log(\"render\");\n    const {\n      isLoading\n    } = this.state;\n    const {} = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? \"Loading\" : movies.map(movie => {\n        console.log(movie);\n\n        /*#__PURE__*/\n        _jsxDEV(Movie, {\n          id: movie.id,\n          year: movie.year,\n          title: movie.title,\n          summary: movie.summary,\n          poster: movie.medium_cover_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/hanbal_2021/7_리액트_영화/movie_app_2021/src/App.js"],"names":["Potato","PropTypes","React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","console","log","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAMhCC,SANgC,GAMpB,YAAY;AACtB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF;AADF,UAIF,MAAMN,KAAK,CAACS,GAAN,CAAU,2CAAV,CAJV;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAd+B;AAAA;;AAehCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,SAAL;AACD;;AACDO,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,UAAM,KAAK,KAAKA,KAAhB;AACA,wBACE;AAAA,gBACGC,SAAS,GACN,SADM,GAENC,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AACpBN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;;AACA;AAAA,gBAAC,KAAD;AACE,UAAA,EAAE,EAAEA,KAAK,CAACC,EADZ;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,UAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,UAAA,MAAM,EAAEJ,KAAK,CAACK;AALhB;AAAA;AAAA;AAAA;AAAA;AAOD,OATD;AAHN;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAtC+B;;AAyClC,eAAenB,GAAf","sourcesContent":["import Potato from \"./Potato\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    console.log(\"render\");\n    const { isLoading } = this.state;\n    const {} = this.state;\n    return (\n      <div>\n        {isLoading\n          ? \"Loading\"\n          : movies.map((movie) => {\n              console.log(movie);\n              <Movie\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n              />;\n            })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}